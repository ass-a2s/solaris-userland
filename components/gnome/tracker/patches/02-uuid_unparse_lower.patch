Solaris libuuid doesn't have a uuid_unparse_lower or uuid_unparse_upper;
however, libuuid's uuid_unparse always returns lowercase characters so is
the equivalent of uuid_unparse_lower.  Regardless, bug 21395188 has been
filed to add these to Solaris.

Not appropriate for upstream.
--- a/src/libtracker-sparql/tracker-utils.c	2018-04-25 08:43:54.837556647 -0700
+++ b/src/libtracker-sparql/tracker-utils.c	2018-04-25 08:44:29.251751239 -0700
@@ -36,7 +36,7 @@
 gchar* tracker_sparql_escape_uri (const gchar* uri);
 gchar* tracker_sparql_escape_string (const gchar* literal);
 void uuid_generate (guchar* uuid);
-void uuid_unparse_lower (guchar* uuid, gchar* out);
+void uuid_unparse (guchar* uuid, gchar* out);
 gchar* tracker_sparql_get_uuid_urn (void);
 
 
@@ -284,7 +284,7 @@
 #line 118 "/home/carlos/Source/gnome/tracker/src/libtracker-sparql/tracker-utils.vala"
 	uuid_generate (base_uuid);
 #line 119 "/home/carlos/Source/gnome/tracker/src/libtracker-sparql/tracker-utils.vala"
-	uuid_unparse_lower (base_uuid, (gchar*) lower);
+	uuid_unparse (base_uuid, (gchar*) lower);
 #line 122 "/home/carlos/Source/gnome/tracker/src/libtracker-sparql/tracker-utils.vala"
 	_tmp2_ = g_strdup_printf ("urn:uuid:%s", lower);
 #line 122 "/home/carlos/Source/gnome/tracker/src/libtracker-sparql/tracker-utils.vala"
--- a/src/libtracker-sparql/tracker-utils.vala	2018-04-25 09:35:04.021326063 -0700
+++ b/src/libtracker-sparql/tracker-utils.vala	2018-04-25 09:35:28.293331966 -0700
@@ -95,8 +95,8 @@
 	[CCode (cname = "uuid_generate")]
 	private extern static void uuid_generate ([CCode (array_length = false)] uchar[] uuid);
 
-	[CCode (cname = "uuid_unparse_lower")]
-	private extern static void uuid_unparse_lower ([CCode (array_length = false)] uchar[] uuid, char* out);
+	[CCode (cname = "uuid_unparse")]
+	private extern static void uuid_unparse ([CCode (array_length = false)] uchar[] uuid, char* out);
 
 	/**
 	 * tracker_sparql_get_uuid_urn:
@@ -116,7 +116,7 @@
 		string lower = (string) new char[37];
 
 		uuid_generate (base_uuid);
-		uuid_unparse_lower (base_uuid, (char *) lower);
+		uuid_unparse (base_uuid, (char *) lower);
 
 		// generate uuid
 		return "urn:uuid:%s".printf (lower);
