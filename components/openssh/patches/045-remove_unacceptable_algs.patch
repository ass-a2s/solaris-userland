#
# In order for OpenSSH to comply with Oracle Software Security Assurance
# Standards (OSSA), completely remove support for unacceptable arcfour* ciphers
# and hmac-md5 Messages Authentication Codes (MACs). Besides that, disable
# deprecated 3des-cbc by default on client (already disabled on the server).
#
# Update Aug 29, 2016:
# Disabling arcfour used to be implemented by Solaris specific macro
# WITHOUT_ARCFOUR, but now upstream OPENSSL_NO_RC4 is used instead.
#
# Update Jan 4, 2017:
# We used to disable 3des-cbc on the client, but now upstream does that too and
# we no longer have to.
#
# Patch source: in-house
#
--- old/mac.c	2018-11-12 17:30:28.381252255 +0000
+++ new/mac.c	2018-11-12 17:50:08.833351257 +0000
@@ -87,8 +87,10 @@ static const struct macalg macs[] = {
 	{ "hmac-sha2-256",			SSH_DIGEST, SSH_DIGEST_SHA256, 0, 0, 0, 0 },
 	{ "hmac-sha2-512",			SSH_DIGEST, SSH_DIGEST_SHA512, 0, 0, 0, 0 },
 #endif
+#ifndef WITHOUT_HMAC_MD5
 	{ "hmac-md5",				SSH_DIGEST, SSH_DIGEST_MD5, 0, 0, 0, 0 },
 	{ "hmac-md5-96",			SSH_DIGEST, SSH_DIGEST_MD5, 96, 0, 0, 0 },
+#endif
 	{ "umac-64@openssh.com",		SSH_UMAC, 0, 0, 128, 64, 0 },
 	{ "umac-128@openssh.com",		SSH_UMAC128, 0, 0, 128, 128, 0 },
 
@@ -99,8 +101,10 @@ static const struct macalg macs[] = {
 	{ "hmac-sha2-256-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA256, 0, 0, 0, 1 },
 	{ "hmac-sha2-512-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA512, 0, 0, 0, 1 },
 #endif
+#ifndef WITHOUT_HMAC_MD5
 	{ "hmac-md5-etm@openssh.com",		SSH_DIGEST, SSH_DIGEST_MD5, 0, 0, 0, 1 },
 	{ "hmac-md5-96-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_MD5, 96, 0, 0, 1 },
+#endif
 	{ "umac-64-etm@openssh.com",		SSH_UMAC, 0, 0, 128, 64, 1 },
 	{ "umac-128-etm@openssh.com",		SSH_UMAC128, 0, 0, 128, 128, 1 },
 
--- old/sshd.8	2018-11-12 17:30:28.387657212 +0000
+++ new/sshd.8	2018-11-12 17:52:58.106503003 +0000
@@ -259,12 +259,12 @@ host key against its own database to ver
 Forward security is provided through a Diffie-Hellman key agreement.
 This key agreement results in a shared session key.
 The rest of the session is encrypted using a symmetric cipher, currently
-128-bit AES, Blowfish, 3DES, Arcfour, 192-bit AES, or 256-bit AES.
+128-bit AES, Blowfish, 3DES, 192-bit AES, or 256-bit AES.
 The client selects the encryption algorithm
 to use from those offered by the server.
 Additionally, session integrity is provided
 through a cryptographic message authentication code
-(hmac-md5, hmac-sha1, umac-64, umac-128,
+(hmac-sha1, umac-64, umac-128,
 hmac-sha2-256 or hmac-sha2-512).
 .Pp
 Finally, the server and the client enter an authentication dialog.
--- old/sshd_config.5	2018-11-12 17:30:28.390327332 +0000
+++ new/sshd_config.5	2018-11-12 17:53:55.587343422 +0000
@@ -1034,10 +1034,6 @@ The supported MACs are:
 .Pp
 .Bl -item -compact -offset indent
 .It
-hmac-md5
-.It
-hmac-md5-96
-.It
 hmac-sha1
 .It
 hmac-sha1-96
@@ -1050,10 +1046,6 @@ umac-64@openssh.com
 .It
 umac-128@openssh.com
 .It
-hmac-md5-etm@openssh.com
-.It
-hmac-md5-96-etm@openssh.com
-.It
 hmac-sha1-etm@openssh.com
 .It
 hmac-sha1-96-etm@openssh.com
