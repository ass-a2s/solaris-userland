This patch enables building both 32- and 64-bit versions of the library, and
installing them under usr/lib. Since ODPI-C searches the standard library
runpath to find libclntsh.so, we bake in the paths where the Instant Client
is installed if using IPS.

Not submitting upstream because this is specific to Solaris Userland build
requirements.

--- odpi-2.3.0/Makefile.orig	2018-10-04 23:38:55.799965328 -0700
+++ odpi-2.3.0/Makefile	2018-10-04 23:40:10.066161907 -0700
@@ -18,48 +18,85 @@
 #------------------------------------------------------------------------------
 
 vpath %.c src
 vpath %.h include src
 
+# Pull in userland definitions.
+include ../../../../make-rules/shared-macros.mk
+
+# We bake in the Instant Client library paths 
+LDFLAGS32 += -R"\$$ORIGIN/../oracle/instantclient/12.2/lib"
+LDFLAGS32 += -R"\$$ORIGIN/../oracle/instantclient/12.1/lib"
+
+LDFLAGS64 += -R"\$$ORIGIN/../../oracle/instantclient/12.2/lib/$(MACH64)"
+LDFLAGS64 += -R"\$$ORIGIN/../../oracle/instantclient/12.1/lib/$(MACH64)"
+
+
+# define location for library target and intermediate files
 BUILD_DIR = build
 LIB_DIR = lib
 
 CC = gcc
 LD = gcc
-CFLAGS = -Iinclude -O2 -g -Wall -fPIC
-LIBS = -ldl -lpthread
-LDFLAGS = -shared
+CFLAGS = -Iinclude -O2 -g -Wall -fPIC -m$(BITS)
+LIBS = -lpthread
+LDFLAGS = -shared -m$(BITS) $(LDFLAGS$(BITS))
 ifeq ($(shell uname -s), Darwin)
 	LIB_NAME = libodpic.dylib
 	LIB_OUT_OPTS = -dynamiclib \
 		-install_name $(shell pwd)/$(LIB_DIR)/$(LIB_NAME) \
 		-o $(LIB_DIR)/$(LIB_NAME)
 else
 	LIB_NAME = libodpic.so
-	LIB_OUT_OPTS = -o $(LIB_DIR)/$(LIB_NAME)
+	DYNLIB = $(LIB_NAME).$(VERS)
+	LIB_OUT_OPTS = -o $(LIB_DIR)/$(DYNLIB)
+	# Best practice: set the SONAME
+	LDFLAGS += -h$(DYNLIB)
 endif
 
 SRCS = dpiConn.c dpiContext.c dpiData.c dpiEnv.c dpiError.c dpiGen.c \
        dpiGlobal.c dpiLob.c dpiObject.c dpiObjectAttr.c dpiObjectType.c \
        dpiPool.c dpiStmt.c dpiUtils.c dpiVar.c dpiOracleType.c dpiSubscr.c \
        dpiDeqOptions.c dpiEnqOptions.c dpiMsgProps.c dpiRowid.c dpiOci.c \
        dpiDebug.c dpiHandlePool.c dpiHandleList.c
 OBJS = $(SRCS:%.c=$(BUILD_DIR)/%.o)
 
-all: $(BUILD_DIR) $(LIB_DIR) $(LIB_DIR)/$(LIB_NAME)
+DIRS = $(BUILD_DIR) $(LIB_DIR)
 
+all: $(DIRS) $(LIB_DIR)/$(DYNLIB)
+
 clean:
-	rm -rf $(BUILD_DIR)
-	rm -rf $(LIB_DIR)
+	rm -rf $(DIRS)
 
-$(BUILD_DIR):
-	mkdir $(BUILD_DIR)
 
-$(LIB_DIR):
-	mkdir $(LIB_DIR)
+$(DIRS):
+	mkdir $@
 
 $(BUILD_DIR)/%.o: %.c dpi.h dpiImpl.h dpiErrorMessages.h
 	$(CC) -c $(CFLAGS) $< -o $@
 
-$(LIB_DIR)/$(LIB_NAME): $(OBJS)
+$(LIB_DIR)/$(DYNLIB): $(OBJS)
 	$(LD) $(LDFLAGS) $(LIB_OUT_OPTS) $(OBJS) $(LIBS)
+
+
+install: $(LIB_DIR)/$(DYNLIB) install$(BITS) liblink$(BITS)
+
+$(PROTOUSRINCDIR)/odpi-$(DOTLESS_VERSION)/%.h:		include/%.h
+	$(INS.file)
+
+$(PROTOUSRLIBDIR)/%.so.$(VERS):		$(LIB_DIR)/%.so.$(VERS)
+	$(INS.file) 
+
+$(PROTOUSRLIBDIR64)/%.so.$(VERS):	$(LIB_DIR)/%.so.$(VERS)
+	$(INS.file)
+
+liblink32: $(PROTOUSRLIBDIR)/$(DYNLIB)
+	-$(RM) $(PROTOUSRLIBDIR)/$(LIB_NAME)
+	$(SYMLINK) $(DYNLIB) $(PROTOUSRLIBDIR)/$(LIB_NAME)
+
+liblink64: $(PROTOUSRLIBDIR64)/$(DYNLIB)
+	-$(RM) $(PROTOUSRLIBDIR64)/$(LIB_NAME)
+	$(SYMLINK) $(DYNLIB) $(PROTOUSRLIBDIR64)/$(LIB_NAME)
+
+install32: $(PROTOUSRLIBDIR)/$(DYNLIB)
+install64: $(PROTOUSRINCDIR)/odpi-$(DOTLESS_VERSION)/dpi.h $(PROTOUSRLIBDIR64)/$(DYNLIB)
 
