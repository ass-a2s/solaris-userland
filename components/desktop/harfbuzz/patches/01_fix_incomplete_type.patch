The patch fixes the compilation failure on Solaris
where the GNU gcc complaints about incomplete
hb_is_signed<char> type. As C++ standard states
that plain char, signed char, and unsigned char
are three distinct types, the compiler is right.
The patch, which was taken from upstream [1],
resolves this issue by providing correct
data types for template specializations.

[1] Harfbuzz 2.3.0 broken on Solaris 10
https://github.com/harfbuzz/harfbuzz/issues/1535

commit 1e06282105a2d579aab32094cc7abc10ed231978
Author: Behdad Esfahbod <behdad@behdad.org>
Date:   Thu Jan 31 13:56:58 2019 -0800

    Adjust hb_is_signed<>

    Fixes https://github.com/harfbuzz/harfbuzz/issues/1535

--- harfbuzz-2.3.1/src/hb-dsalgs.hh	2019-03-05 02:14:00.640293445 +0000
+++ harfbuzz-2.3.1/src/hb-dsalgs.hh	2019-03-05 01:54:48.809843506 +0000
@@ -299,14 +299,14 @@ hb_ceil_to_4 (unsigned int v)
 }
 
 template <typename T> struct hb_is_signed;
-template <> struct hb_is_signed<signed char> { enum { value = true }; };
-template <> struct hb_is_signed<signed short> { enum { value = true }; };
-template <> struct hb_is_signed<signed int> { enum { value = true }; };
-template <> struct hb_is_signed<signed long> { enum { value = true }; };
-template <> struct hb_is_signed<unsigned char> { enum { value = false }; };
-template <> struct hb_is_signed<unsigned short> { enum { value = false }; };
-template <> struct hb_is_signed<unsigned int> { enum { value = false }; };
-template <> struct hb_is_signed<unsigned long> { enum { value = false }; };
+template <> struct hb_is_signed<int8_t> { enum { value = true }; };
+template <> struct hb_is_signed<int16_t> { enum { value = true }; };
+template <> struct hb_is_signed<int32_t> { enum { value = true }; };
+template <> struct hb_is_signed<int64_t> { enum { value = true }; };
+template <> struct hb_is_signed<uint8_t> { enum { value = false }; };
+template <> struct hb_is_signed<uint16_t> { enum { value = false }; };
+template <> struct hb_is_signed<uint32_t> { enum { value = false }; };
+template <> struct hb_is_signed<uint64_t> { enum { value = false }; };
 /* We need to define hb_is_signed for the typedefs we use on pre-Visual
  * Studio 2010 for the int8_t type, since __int8/__int64 is not considered
  * the same as char/long.  The previous lines will suffice for the other
