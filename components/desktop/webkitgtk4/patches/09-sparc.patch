Restore removed SPARC code and fixup for CMake-based build.

Also patch up Source/cmake/OptionsCommon.cmake and to detect these properly?
This seems like mostly an option for detecting whether or not to enable JIT in
Source/JavaScriptCore/CMakeLists.txt.  Since neither version of SPARC will have
that, probably doesn't matter for now.

https://bugs.webkit.org/show_bug.cgi?id=124941

--- a/Source/WTF/wtf/Platform.h	2018-02-14 10:35:01.420174241 -0800
+++ b/Source/WTF/wtf/Platform.h	2018-02-14 10:36:12.276175097 -0800
@@ -114,6 +114,23 @@
 #define WTF_CPU_KNOWN 1
 #endif

+/* CPU(SPARC32) - SPARC 32-bit */
+#if defined(__sparc) && !defined(__arch64__) || defined(__sparcv8)
+#define WTF_CPU_SPARC32 1
+#define WTF_CPU_BIG_ENDIAN 1
+#endif
+
+/* CPU(SPARC64) - SPARC 64-bit */
+#if defined(__sparc__) && defined(__arch64__) || defined (__sparcv9)
+#define WTF_CPU_SPARC64 1
+#define WTF_CPU_BIG_ENDIAN 1
+#endif
+
+/* CPU(SPARC) - any SPARC, true for CPU(SPARC32) and CPU(SPARC64) */
+#if CPU(SPARC32) || CPU(SPARC64)
+#define WTF_CPU_SPARC 1
+#endif
+
 /* CPU(X86) - i386 / x86 32-bit */
 #if   defined(__i386__) \
     || defined(i386)     \
@@ -322,7 +339,7 @@
 #define WTF_CPU_UNKNOWN 1
 #endif

-#if CPU(ARM) || CPU(MIPS) || CPU(UNKNOWN)
+#if CPU(ARM) || CPU(MIPS) || CPU(UNKNOWN) || CPU(SPARC)
 #define WTF_CPU_NEEDS_ALIGNED_ACCESS 1
 #endif

--- a/CMakeLists.txt	2018-02-14 11:02:33.132887067 -0800
+++ b/CMakeLists.txt	2018-02-14 11:05:52.644576425 -0800
@@ -99,6 +99,8 @@
     set(WTF_CPU_PPC64 1)
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "ppc64le")
     set(WTF_CPU_PPC64LE 1)
+elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "sparc*")
+    set(WTF_CPU_SPARC 1)
 else ()
     set(WTF_CPU_UNKNOWN 1)
 endif ()
--- a/Source/WTF/wtf/dtoa/utils.h
--- b/Source/WTF/wtf/dtoa/utils.h
@@ -49,7 +49,7 @@
 defined(__ARMEL__) || \
 defined(_MIPS_ARCH_MIPS32R2)
 #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1
-#elif CPU(MIPS) || CPU(MIPS64) || CPU(PPC) || CPU(PPC64) || CPU(PPC64LE) || CPU(ARM64)
+#elif CPU(MIPS) || CPU(MIPS64) || CPU(PPC) || CPU(PPC64) || CPU(PPC64LE) || CPU(ARM64) || CPU(SPARC)
 #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1
 #elif defined(_M_IX86) || defined(__i386__)
 #if defined(_WIN32)

