The minimized version of vim (package vim-core) does not
provide help files, and therefore, we need to inform the user
that the help cannot be displayed without vim package installed.
This patch ensures that help_minimized.txt file is printed
instead of missing help files to inform the user.

--- a/src/ex_cmds.c	2018-07-19 04:01:39.945767647 +0000
+++ b/src/ex_cmds.c	2018-07-19 03:50:04.702136009 +0000
@@ -6291,6 +6291,8 @@ ex_help(exarg_T *eap)
 #ifdef FEAT_FOLDING
     int		old_KeyTyped = KeyTyped;
 #endif
+    int		nohelp = FALSE, nominhelp = FALSE;
+    char_u	*mhf = NULL;
 
     if (eap != NULL)
     {
@@ -6342,6 +6344,23 @@ ex_help(exarg_T *eap)
     n = find_help_tags(arg, &num_matches, &matches,
 						 eap != NULL && eap->forceit);
 
+    /*
+     * If we didn't find the help topic, check to see whether 'helpfile'
+     * (typically $VIMRUNTIME/doc/help.txt) exists.  If not, then we'll send the
+     * user to the minimized help file delivered with the core vim package which
+     * explains why there's no help and how to get it.
+     */
+    if (num_matches == 0 && mch_access((char *)p_hf, F_OK) < 0) {
+	nohelp = TRUE;
+	mhf = alloc(MAXPATHL);
+	STRNCPY(mhf, p_hf, MAXPATHL - 1);
+	mhf[STRLEN(mhf) - 8] = '\0';
+	STRNCAT(mhf, "help_minimized.txt", MAXPATHL - STRLEN(mhf) - 1);
+
+	if (mch_access((char *)mhf, F_OK) < 0)
+	    nominhelp = TRUE;
+    }
+
     i = 0;
 #ifdef FEAT_MULTI_LANG
     if (n != FAIL && lang != NULL)
@@ -6354,7 +6373,7 @@ ex_help(exarg_T *eap)
 		break;
 	}
 #endif
-    if (i >= num_matches || n == FAIL)
+    if (!nohelp && i >= num_matches || n == FAIL)
     {
 #ifdef FEAT_MULTI_LANG
 	if (lang != NULL)
@@ -6367,9 +6386,11 @@ ex_help(exarg_T *eap)
 	return;
     }
 
-    /* The first match (in the requested language) is the best match. */
-    tag = vim_strsave(matches[i]);
-    FreeWild(num_matches, matches);
+    if (!nohelp) {
+	/* The first match (in the requested language) is the best match. */
+	tag = vim_strsave(matches[i]);
+	FreeWild(num_matches, matches);
+    }
 
 #ifdef FEAT_GUI
     need_mouse_correct = TRUE;
@@ -6395,12 +6416,14 @@ ex_help(exarg_T *eap)
 	     * There is no help window yet.
 	     * Try to open the file specified by the "helpfile" option.
 	     */
-	    if ((helpfd = mch_fopen((char *)p_hf, READBIN)) == NULL)
-	    {
-		smsg((char_u *)_("Sorry, help file \"%s\" not found"), p_hf);
-		goto erret;
+	    if (!nohelp || nominhelp) {
+		if ((helpfd = mch_fopen((char *)p_hf, READBIN)) == NULL)
+		{
+		    smsg((char_u *)_("Sorry, help file \"%s\" not found"), p_hf);
+		    goto erret;
+		}
+		fclose(helpfd);
 	    }
-	    fclose(helpfd);
 
 	    /* Split off help window; put it at far top if no position
 	     * specified, the current window is vertically split and
@@ -6421,7 +6444,7 @@ ex_help(exarg_T *eap)
 	     * Set the alternate file to the previously edited file.
 	     */
 	    alt_fnum = curbuf->b_fnum;
-	    (void)do_ecmd(0, NULL, NULL, NULL, ECMD_LASTL,
+	    (void)do_ecmd(0, mhf, NULL, NULL, ECMD_LASTL,
 			  ECMD_HIDE + ECMD_SET_HELP,
 			  NULL);  /* buffer is still open, don't store info */
 	    if (!cmdmod.keepalt)
@@ -6439,7 +6462,7 @@ ex_help(exarg_T *eap)
     KeyTyped = old_KeyTyped;
 #endif
 
-    if (tag != NULL)
+    if (!nohelp && tag != NULL)
 	do_tag(tag, DT_HELP, 1, FALSE, TRUE);
 
     /* Delete the empty buffer if we're not using it.  Careful: autocommands
@@ -6457,7 +6480,8 @@ ex_help(exarg_T *eap)
 	curwin->w_alt_fnum = alt_fnum;
 
 erret:
-    vim_free(tag);
+    if (!nohelp)
+	vim_free(tag);
 }
 
 /*
