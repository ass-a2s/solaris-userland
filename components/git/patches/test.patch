One of the tests need patching:

  - Because we're doing the build in a symlink farm, one of the diff tests
    thinks that we're changing the type of the files from symlink to file,
    so the diffs come out wrong.  Rather than cleverly mucking around with
    the working directory vs the repo directory, we just cat the files as
    real files into place.

Unclear whether this patch should be sent upstream.

--- git-2.19.2/t/t4018-diff-funcname.sh.orig	2018-11-27 04:21:46.533262311 -0800
+++ git-2.19.2/t/t4018-diff-funcname.sh	2018-11-27 04:24:26.447516195 -0800
@@ -82,8 +82,11 @@
 
 	# add all test files to the index
 	(
-		cd "$TEST_DIRECTORY"/t4018 &&
-		git --git-dir="$TRASH_DIRECTORY/.git" add .
+		( cd "$TEST_DIRECTORY"/t4018 && printf "%s\n" * ) | while read f
+			do
+				cat "$TEST_DIRECTORY"/t4018/$f > $f
+				git add -v $f
+			done
 	) &&
 
 	# place modified files in the worktree


This simply adds a couple of targets to the test Makefile which allow us to
run the tests in parallel cleanly.  This way the results don't get cleaned
up automatically after running the tests, and we can emit those results to
the master file.  This might be interesting to upstream, but is really
specific to running the tests in an external framework.

--- git-2.19.2/t/Makefile.orig	2018-11-27 06:58:47.179350591 -0800
+++ git-2.19.2/t/Makefile	2018-11-27 07:00:38.487947976 -0800
@@ -42,6 +42,9 @@
 test: pre-clean check-chainlint $(TEST_LINT)
 	$(MAKE) aggregate-results-and-cleanup
 
+test-noclean: pre-clean $(TEST_LINT)
+	$(MAKE) T
+
 failed:
 	@failed=$$(cd '$(TEST_RESULTS_DIRECTORY_SQ)' && \
 		grep -l '^failed [1-9]' *.counts | \
@@ -93,6 +96,8 @@
 test-lint-shell-syntax:
 	@'$(PERL_PATH_SQ)' check-non-portable-shell.pl $(T) $(THELPERS)
 
+T: $(T)
+
 test-lint-filenames:
 	@# We do *not* pass a glob to ls-files but use grep instead, to catch
 	@# non-ASCII characters (which are quoted within double-quotes)
