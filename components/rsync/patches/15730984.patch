Reduce references to source pathnames down to the respective basenames so
that builds are reproducible between workspaces.

--- rsync-3.1.3/main.c.orig	2018-07-13 07:41:03.984214760 -0700
+++ rsync-3.1.3/main.c	2018-07-13 07:43:02.574626276 -0700
@@ -26,6 +26,7 @@
 #if defined CONFIG_LOCALE && defined HAVE_LOCALE_H
 #include <locale.h>
 #endif
+#include <libgen.h>
 
 extern int dry_run;
 extern int list_only;
@@ -1239,7 +1240,7 @@
 	for (i = 0; argv[i]; i++) {
 		if (!(argv[i] = strdup(argv[i]))) {
 			rprintf (FERROR, "out of memory at %s(%d)\n",
-				 __FILE__, __LINE__);
+				 basename(__FILE__), __LINE__);
 			return RERR_MALLOC;
 		}
 	}
--- rsync-3.1.3/cleanup.c.orig	2018-07-13 07:43:28.714209661 -0700
+++ rsync-3.1.3/cleanup.c	2018-07-13 07:45:43.997502670 -0700
@@ -21,6 +21,7 @@
  */
 
 #include "rsync.h"
+#include <libgen.h>
 
 extern int dry_run;
 extern int am_server;
@@ -135,7 +136,7 @@
 		if (DEBUG_GTE(EXIT, 2)) {
 			rprintf(FINFO,
 				"[%s] _exit_cleanup(code=%d, file=%s, line=%d): entered\n",
-				who_am_i(), code, file, line);
+				who_am_i(), code, basename((char *)file), line);
 		}
 
 		/* FALLTHROUGH */
@@ -234,11 +235,11 @@
 			rprintf(FINFO,
 				"[%s] _exit_cleanup(code=%d, file=%s, line=%d): "
 				"about to call exit(%d)%s\n",
-				who_am_i(), first_code, exit_file, exit_line, exit_code,
+				who_am_i(), first_code, basename((char *)exit_file), exit_line, exit_code,
 				dry_run ? " (DRY RUN)" : "");
 		}
 
-		/* FALLTHROUGH */
+		/* FALLTHROUGH *)/
 #include "case_N.h"
 		switch_step++;
 
--- rsync-3.1.3/t_stub.c.orig	2018-07-13 07:46:10.960841749 -0700
+++ rsync-3.1.3/t_stub.c	2018-07-13 07:47:35.654783595 -0700
@@ -20,6 +20,7 @@
  */
 
 #include "rsync.h"
+#include <libgen.h>
 
 int inplace = 0;
 int modify_window = 0;
@@ -56,7 +57,7 @@
  void _exit_cleanup(int code, const char *file, int line)
 {
 	fprintf(stderr, "exit(%d): %s(%d)\n",
-		code, file, line);
+		code, basename((char *)file), line);
 	exit(code);
 }
 
--- rsync-3.1.3/log.c.orig	2018-07-13 07:47:52.075255852 -0700
+++ rsync-3.1.3/log.c	2018-07-13 07:50:27.588491270 -0700
@@ -22,6 +22,7 @@
 #include "rsync.h"
 #include "itypes.h"
 #include "inums.h"
+#include <libgen.h>
 
 extern int dry_run;
 extern int am_daemon;
@@ -880,10 +881,10 @@
 		/* VANISHED is not an error, only a warning */
 		if (code == RERR_VANISHED) {
 			rprintf(FWARNING, "rsync warning: %s (code %d) at %s(%d) [%s=%s]\n",
-				name, code, file, line, who_am_i(), RSYNC_VERSION);
+				name, code, basename((char *)file), line, who_am_i(), RSYNC_VERSION);
 		} else {
 			rprintf(FERROR, "rsync error: %s (code %d) at %s(%d) [%s=%s]\n",
-				name, code, file, line, who_am_i(), RSYNC_VERSION);
+				name, code, basename((char *)file), line, who_am_i(), RSYNC_VERSION);
 		}
 	}
 }
